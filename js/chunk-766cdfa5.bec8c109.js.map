{"version":3,"sources":["webpack:///./node_modules/@ionic/core/dist/esm-es5/ion-avatar_3-ios.entry.js","webpack:///./node_modules/@ionic/core/dist/esm-es5/theme-c2dc54d9.js"],"names":["avatarIosCss","avatarMdCss","Avatar","hostRef","this","prototype","render","class","style","ios","md","badgeIosCss","badgeMdCss","Badge","_a","mode","Object","assign","color","thumbnailCss","Thumbnail","hostContext","selector","el","closest","createColorClasses","length","undefined","getClassList","classes","array","Array","isArray","split","filter","c","map","trim","getClassMap","forEach","SCHEME","openURL","url","ev","direction","router","test","document","querySelector","preventDefault","push"],"mappings":"gHAAA,kLAGIA,EAAe,4PACfC,EAAc,4PACdC,EAAwB,WACxB,SAASA,EAAOC,GACZ,eAAiBC,KAAMD,GAK3B,OAHAD,EAAOG,UAAUC,OAAS,WACtB,OAAQ,cAAD,CAAG,OAAM,CAAEC,MAAO,eAAWH,OAAS,eAAE,OAAQ,QAEpDF,EAPgB,GAS3BA,EAAOM,MAAQ,CACUC,IAAKT,EACNU,GAAIT,GAE5B,IAAIU,EAAc,kjCACdC,EAAa,8nCACbC,EAAuB,WACvB,SAASA,EAAMV,GACX,eAAiBC,KAAMD,GAO3B,OALAU,EAAMR,UAAUC,OAAS,WACrB,IAAIQ,EACAC,EAAO,eAAWX,MACtB,OAAQ,cAAD,CAAG,OAAM,CAAEG,MAAOS,OAAOC,OAAOD,OAAOC,OAAO,GAAI,eAAmBb,KAAKc,SAAUJ,EAAK,GAAIA,EAAGC,IAAQ,EAAMD,KAAQ,eAAE,OAAQ,QAEpID,EATe,GAW1BA,EAAML,MAAQ,CACWC,IAAKE,EACND,GAAIE,GAE5B,IAAIO,EAAe,8QACfC,EAA2B,WAC3B,SAASA,EAAUjB,GACf,eAAiBC,KAAMD,GAK3B,OAHAiB,EAAUf,UAAUC,OAAS,WACzB,OAAQ,cAAD,CAAG,OAAM,CAAEC,MAAO,eAAWH,OAAS,eAAE,OAAQ,QAEpDgB,EAPmB,GAS9BA,EAAUZ,MAAQW,G,kCC7ClB,wJACIE,EAAc,SAAUC,EAAUC,GAClC,OAAgC,OAAzBA,EAAGC,QAAQF,IAKlBG,EAAqB,SAAUP,GAC/B,IAAIJ,EACJ,MAAyB,kBAAVI,GAAsBA,EAAMQ,OAAS,GAAMZ,EAAK,CACvD,aAAa,GAEjBA,EAAG,aAAeI,IAAS,EAC3BJ,QAAMa,GAEVC,EAAe,SAAUC,GACzB,QAAgBF,IAAZE,EAAuB,CACvB,IAAIC,EAAQC,MAAMC,QAAQH,GAAWA,EAAUA,EAAQI,MAAM,KAC7D,OAAOH,EACFI,QAAO,SAAUC,GAAK,OAAY,MAALA,KAC7BC,KAAI,SAAUD,GAAK,OAAOA,EAAEE,UAC5BH,QAAO,SAAUC,GAAK,MAAa,KAANA,KAEtC,MAAO,IAEPG,EAAc,SAAUT,GACxB,IAAIO,EAAM,GAEV,OADAR,EAAaC,GAASU,SAAQ,SAAUJ,GAAK,OAAOC,EAAID,IAAK,KACtDC,GAEPI,EAAS,uBACTC,EAAU,SAAUC,EAAKC,EAAIC,GAAa,OAAO,4BAAU,OAAQ,OAAQ,GAAQ,WACnF,IAAIC,EACJ,OAAO,yBAAYzC,MAAM,SAAUU,GAC/B,OAAW,MAAP4B,GAA0B,MAAXA,EAAI,KAAeF,EAAOM,KAAKJ,KAC9CG,EAASE,SAASC,cAAc,cAC5BH,IACU,MAANF,GACAA,EAAGM,iBAEA,CAAC,EAAcJ,EAAOK,KAAKR,EAAKE,KAGxC,CAAC,GAAc","file":"js/chunk-766cdfa5.bec8c109.js","sourcesContent":["import { r as registerInstance, h, H as Host } from './index-e23c3ffd.js';\nimport { b as getIonMode } from './ionic-global-fbc9a2ac.js';\nimport { c as createColorClasses } from './theme-c2dc54d9.js';\nvar avatarIosCss = \":host{border-radius:var(--border-radius);display:block}::slotted(ion-img),::slotted(img){border-radius:var(--border-radius);width:100%;height:100%;-o-object-fit:cover;object-fit:cover;overflow:hidden}:host{--border-radius:50%;width:48px;height:48px}\";\nvar avatarMdCss = \":host{border-radius:var(--border-radius);display:block}::slotted(ion-img),::slotted(img){border-radius:var(--border-radius);width:100%;height:100%;-o-object-fit:cover;object-fit:cover;overflow:hidden}:host{--border-radius:50%;width:64px;height:64px}\";\nvar Avatar = /** @class */ (function () {\n    function Avatar(hostRef) {\n        registerInstance(this, hostRef);\n    }\n    Avatar.prototype.render = function () {\n        return (h(Host, { class: getIonMode(this) }, h(\"slot\", null)));\n    };\n    return Avatar;\n}());\nAvatar.style = {\n    /*STENCIL:MODE:ios*/ ios: avatarIosCss,\n    /*STENCIL:MODE:md*/ md: avatarMdCss\n};\nvar badgeIosCss = \":host{--background:var(--ion-color-primary, #3880ff);--color:var(--ion-color-primary-contrast, #fff);--padding-top:3px;--padding-end:8px;--padding-bottom:3px;--padding-start:8px;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;padding-left:var(--padding-start);padding-right:var(--padding-end);padding-top:var(--padding-top);padding-bottom:var(--padding-bottom);display:inline-block;min-width:10px;background:var(--background);color:var(--color);font-family:var(--ion-font-family, inherit);font-size:13px;font-weight:bold;line-height:1;text-align:center;white-space:nowrap;contain:content;vertical-align:baseline}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host{padding-left:unset;padding-right:unset;-webkit-padding-start:var(--padding-start);padding-inline-start:var(--padding-start);-webkit-padding-end:var(--padding-end);padding-inline-end:var(--padding-end)}}:host(.ion-color){background:var(--ion-color-base);color:var(--ion-color-contrast)}:host(:empty){display:none}:host{border-radius:10px}\";\nvar badgeMdCss = \":host{--background:var(--ion-color-primary, #3880ff);--color:var(--ion-color-primary-contrast, #fff);--padding-top:3px;--padding-end:8px;--padding-bottom:3px;--padding-start:8px;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;padding-left:var(--padding-start);padding-right:var(--padding-end);padding-top:var(--padding-top);padding-bottom:var(--padding-bottom);display:inline-block;min-width:10px;background:var(--background);color:var(--color);font-family:var(--ion-font-family, inherit);font-size:13px;font-weight:bold;line-height:1;text-align:center;white-space:nowrap;contain:content;vertical-align:baseline}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host{padding-left:unset;padding-right:unset;-webkit-padding-start:var(--padding-start);padding-inline-start:var(--padding-start);-webkit-padding-end:var(--padding-end);padding-inline-end:var(--padding-end)}}:host(.ion-color){background:var(--ion-color-base);color:var(--ion-color-contrast)}:host(:empty){display:none}:host{--padding-top:3px;--padding-end:4px;--padding-bottom:4px;--padding-start:4px;border-radius:4px}\";\nvar Badge = /** @class */ (function () {\n    function Badge(hostRef) {\n        registerInstance(this, hostRef);\n    }\n    Badge.prototype.render = function () {\n        var _a;\n        var mode = getIonMode(this);\n        return (h(Host, { class: Object.assign(Object.assign({}, createColorClasses(this.color)), (_a = {}, _a[mode] = true, _a)) }, h(\"slot\", null)));\n    };\n    return Badge;\n}());\nBadge.style = {\n    /*STENCIL:MODE:ios*/ ios: badgeIosCss,\n    /*STENCIL:MODE:md*/ md: badgeMdCss\n};\nvar thumbnailCss = \":host{--size:48px;--border-radius:0;border-radius:var(--border-radius);display:block;width:var(--size);height:var(--size)}::slotted(ion-img),::slotted(img){border-radius:var(--border-radius);width:100%;height:100%;-o-object-fit:cover;object-fit:cover;overflow:hidden}\";\nvar Thumbnail = /** @class */ (function () {\n    function Thumbnail(hostRef) {\n        registerInstance(this, hostRef);\n    }\n    Thumbnail.prototype.render = function () {\n        return (h(Host, { class: getIonMode(this) }, h(\"slot\", null)));\n    };\n    return Thumbnail;\n}());\nThumbnail.style = thumbnailCss;\nexport { Avatar as ion_avatar, Badge as ion_badge, Thumbnail as ion_thumbnail };\n","import { __awaiter, __generator } from \"tslib\";\nvar hostContext = function (selector, el) {\n    return el.closest(selector) !== null;\n};\n/**\n * Create the mode and color classes for the component based on the classes passed in\n */\nvar createColorClasses = function (color) {\n    var _a;\n    return (typeof color === 'string' && color.length > 0) ? (_a = {\n            'ion-color': true\n        },\n        _a[\"ion-color-\" + color] = true,\n        _a) : undefined;\n};\nvar getClassList = function (classes) {\n    if (classes !== undefined) {\n        var array = Array.isArray(classes) ? classes : classes.split(' ');\n        return array\n            .filter(function (c) { return c != null; })\n            .map(function (c) { return c.trim(); })\n            .filter(function (c) { return c !== ''; });\n    }\n    return [];\n};\nvar getClassMap = function (classes) {\n    var map = {};\n    getClassList(classes).forEach(function (c) { return map[c] = true; });\n    return map;\n};\nvar SCHEME = /^[a-z][a-z0-9+\\-.]*:/;\nvar openURL = function (url, ev, direction) { return __awaiter(void 0, void 0, void 0, function () {\n    var router;\n    return __generator(this, function (_a) {\n        if (url != null && url[0] !== '#' && !SCHEME.test(url)) {\n            router = document.querySelector('ion-router');\n            if (router) {\n                if (ev != null) {\n                    ev.preventDefault();\n                }\n                return [2 /*return*/, router.push(url, direction)];\n            }\n        }\n        return [2 /*return*/, false];\n    });\n}); };\nexport { createColorClasses as c, getClassMap as g, hostContext as h, openURL as o };\n"],"sourceRoot":""}