{"version":3,"sources":["webpack:///./node_modules/@ionic/core/dist/esm-es5/input-shims-77712174.js"],"names":["cloneMap","WeakMap","relocateInput","componentEl","inputEl","shouldRelocate","inputRelativeY","has","addClone","removeClone","isFocused","input","getRootNode","activeElement","parentEl","parentNode","clonedEl","cloneNode","classList","add","tabIndex","appendChild","set","doc","ownerDocument","tx","dir","style","pointerEvents","transform","clone","get","delete","remove","enableHideCaretOnScroll","scrollEl","scrollHideCaret","shouldHideCaret","onBlur","hideCaret","showCaret","addEventListener","removeEventListener","SKIP_SELECTOR","enableInputBlurring","focused","didScroll","document","onScroll","onFocusin","onTouchend","ev","active","matches","tapped","target","closest","setTimeout","blur","SCROLL_ASSIST_SPEED","getScrollData","contentEl","keyboardHeight","itemEl","calcScrollData","getBoundingClientRect","defaultView","innerHeight","inputRect","contentRect","platformHeight","inputTop","top","inputBottom","bottom","visibleAreaTop","visibleAreaBottom","Math","min","safeAreaTop","safeAreaBottom","distanceToBottom","distanceToTop","desiredScrollAmount","round","scrollAmount","distance","abs","duration","scrollDuration","max","scrollPadding","inputSafeY","enableScrollAssist","footerEl","coord","touchStart","touchEnd","endCoord","hasPointerMoved","preventDefault","stopPropagation","jsSetFocus","scrollData","scrollContentTimeout_1","scrollContent_1","totalScrollAmount","this","_a","label","focus","window","undefined","clearTimeout","scrollByPoint","sent","getScrollElement","scrollHeight","clientHeight","scrollTop","threshold","startCoord","deltaX","x","deltaY","y","PADDING_TIMER_KEY","enableScrollPadding","setScrollPadding","onFocusout","tagName","parentElement","el","timer","setProperty","INPUT_BLURRING","SCROLL_PADDING","startInputShims","config","getNumber","scrollAssist","getBoolean","inputBlurring","inputs","Array","from","querySelectorAll","hideCaretMap","scrollAssistMap","registerInput","inputRoot","rmFn","componentOnReady","shadowRoot","querySelector","unregisterInput","fn","_i","inputs_1","length","detail"],"mappings":"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","file":"js/chunk-2d221c34.01e1abd8.js","sourcesContent":["import { __awaiter, __generator } from \"tslib\";\nimport { p as pointerCoord } from './helpers-5c745fbd.js';\nvar cloneMap = new WeakMap();\nvar relocateInput = function (componentEl, inputEl, shouldRelocate, inputRelativeY) {\n    if (inputRelativeY === void 0) { inputRelativeY = 0; }\n    if (cloneMap.has(componentEl) === shouldRelocate) {\n        return;\n    }\n    if (shouldRelocate) {\n        addClone(componentEl, inputEl, inputRelativeY);\n    }\n    else {\n        removeClone(componentEl, inputEl);\n    }\n};\nvar isFocused = function (input) {\n    return input === input.getRootNode().activeElement;\n};\nvar addClone = function (componentEl, inputEl, inputRelativeY) {\n    // this allows for the actual input to receive the focus from\n    // the user's touch event, but before it receives focus, it\n    // moves the actual input to a location that will not screw\n    // up the app's layout, and does not allow the native browser\n    // to attempt to scroll the input into place (messing up headers/footers)\n    // the cloned input fills the area of where native input should be\n    // while the native input fakes out the browser by relocating itself\n    // before it receives the actual focus event\n    // We hide the focused input (with the visible caret) invisible by making it scale(0),\n    var parentEl = inputEl.parentNode;\n    // DOM WRITES\n    var clonedEl = inputEl.cloneNode(false);\n    clonedEl.classList.add('cloned-input');\n    clonedEl.tabIndex = -1;\n    parentEl.appendChild(clonedEl);\n    cloneMap.set(componentEl, clonedEl);\n    var doc = componentEl.ownerDocument;\n    var tx = doc.dir === 'rtl' ? 9999 : -9999;\n    componentEl.style.pointerEvents = 'none';\n    inputEl.style.transform = \"translate3d(\" + tx + \"px,\" + inputRelativeY + \"px,0) scale(0)\";\n};\nvar removeClone = function (componentEl, inputEl) {\n    var clone = cloneMap.get(componentEl);\n    if (clone) {\n        cloneMap.delete(componentEl);\n        clone.remove();\n    }\n    componentEl.style.pointerEvents = '';\n    inputEl.style.transform = '';\n};\nvar enableHideCaretOnScroll = function (componentEl, inputEl, scrollEl) {\n    if (!scrollEl || !inputEl) {\n        return function () { return; };\n    }\n    var scrollHideCaret = function (shouldHideCaret) {\n        if (isFocused(inputEl)) {\n            relocateInput(componentEl, inputEl, shouldHideCaret);\n        }\n    };\n    var onBlur = function () { return relocateInput(componentEl, inputEl, false); };\n    var hideCaret = function () { return scrollHideCaret(true); };\n    var showCaret = function () { return scrollHideCaret(false); };\n    scrollEl.addEventListener('ionScrollStart', hideCaret);\n    scrollEl.addEventListener('ionScrollEnd', showCaret);\n    inputEl.addEventListener('blur', onBlur);\n    return function () {\n        scrollEl.removeEventListener('ionScrollStart', hideCaret);\n        scrollEl.removeEventListener('ionScrollEnd', showCaret);\n        inputEl.addEventListener('ionBlur', onBlur);\n    };\n};\nvar SKIP_SELECTOR = 'input, textarea, [no-blur]';\nvar enableInputBlurring = function () {\n    var focused = true;\n    var didScroll = false;\n    var doc = document;\n    var onScroll = function () {\n        didScroll = true;\n    };\n    var onFocusin = function () {\n        focused = true;\n    };\n    var onTouchend = function (ev) {\n        // if app did scroll return early\n        if (didScroll) {\n            didScroll = false;\n            return;\n        }\n        var active = doc.activeElement;\n        if (!active) {\n            return;\n        }\n        // only blur if the active element is a text-input or a textarea\n        if (active.matches(SKIP_SELECTOR)) {\n            return;\n        }\n        // if the selected target is the active element, do not blur\n        var tapped = ev.target;\n        if (tapped === active) {\n            return;\n        }\n        if (tapped.matches(SKIP_SELECTOR) || tapped.closest(SKIP_SELECTOR)) {\n            return;\n        }\n        focused = false;\n        // TODO: find a better way, why 50ms?\n        setTimeout(function () {\n            if (!focused) {\n                active.blur();\n            }\n        }, 50);\n    };\n    doc.addEventListener('ionScrollStart', onScroll);\n    doc.addEventListener('focusin', onFocusin, true);\n    doc.addEventListener('touchend', onTouchend, false);\n    return function () {\n        doc.removeEventListener('ionScrollStart', onScroll, true);\n        doc.removeEventListener('focusin', onFocusin, true);\n        doc.removeEventListener('touchend', onTouchend, false);\n    };\n};\nvar SCROLL_ASSIST_SPEED = 0.3;\nvar getScrollData = function (componentEl, contentEl, keyboardHeight) {\n    var itemEl = componentEl.closest('ion-item,[ion-item]') || componentEl;\n    return calcScrollData(itemEl.getBoundingClientRect(), contentEl.getBoundingClientRect(), keyboardHeight, componentEl.ownerDocument.defaultView.innerHeight);\n};\nvar calcScrollData = function (inputRect, contentRect, keyboardHeight, platformHeight) {\n    // compute input's Y values relative to the body\n    var inputTop = inputRect.top;\n    var inputBottom = inputRect.bottom;\n    // compute visible area\n    var visibleAreaTop = contentRect.top;\n    var visibleAreaBottom = Math.min(contentRect.bottom, platformHeight - keyboardHeight);\n    // compute safe area\n    var safeAreaTop = visibleAreaTop + 15;\n    var safeAreaBottom = visibleAreaBottom * 0.5;\n    // figure out if each edge of the input is within the safe area\n    var distanceToBottom = safeAreaBottom - inputBottom;\n    var distanceToTop = safeAreaTop - inputTop;\n    // desiredScrollAmount is the negated distance to the safe area according to our calculations.\n    var desiredScrollAmount = Math.round((distanceToBottom < 0)\n        ? -distanceToBottom\n        : (distanceToTop > 0)\n            ? -distanceToTop\n            : 0);\n    // our calculations make some assumptions that aren't always true, like the keyboard being closed when an input\n    // gets focus, so make sure we don't scroll the input above the visible area\n    var scrollAmount = Math.min(desiredScrollAmount, inputTop - visibleAreaTop);\n    var distance = Math.abs(scrollAmount);\n    var duration = distance / SCROLL_ASSIST_SPEED;\n    var scrollDuration = Math.min(400, Math.max(150, duration));\n    return {\n        scrollAmount: scrollAmount,\n        scrollDuration: scrollDuration,\n        scrollPadding: keyboardHeight,\n        inputSafeY: -(inputTop - safeAreaTop) + 4\n    };\n};\nvar enableScrollAssist = function (componentEl, inputEl, contentEl, footerEl, keyboardHeight) {\n    var coord;\n    var touchStart = function (ev) {\n        coord = pointerCoord(ev);\n    };\n    var touchEnd = function (ev) {\n        // input cover touchend/mouseup\n        if (!coord) {\n            return;\n        }\n        // get where the touchend/mouseup ended\n        var endCoord = pointerCoord(ev);\n        // focus this input if the pointer hasn't moved XX pixels\n        // and the input doesn't already have focus\n        if (!hasPointerMoved(6, coord, endCoord) && !isFocused(inputEl)) {\n            ev.preventDefault();\n            ev.stopPropagation();\n            // begin the input focus process\n            jsSetFocus(componentEl, inputEl, contentEl, footerEl, keyboardHeight);\n        }\n    };\n    componentEl.addEventListener('touchstart', touchStart, true);\n    componentEl.addEventListener('touchend', touchEnd, true);\n    return function () {\n        componentEl.removeEventListener('touchstart', touchStart, true);\n        componentEl.removeEventListener('touchend', touchEnd, true);\n    };\n};\nvar jsSetFocus = function (componentEl, inputEl, contentEl, footerEl, keyboardHeight) { return __awaiter(void 0, void 0, void 0, function () {\n    var scrollData, scrollContentTimeout_1, scrollContent_1, scrollEl, totalScrollAmount;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (!contentEl && !footerEl) {\n                    return [2 /*return*/];\n                }\n                scrollData = getScrollData(componentEl, (contentEl || footerEl), keyboardHeight);\n                if (contentEl && Math.abs(scrollData.scrollAmount) < 4) {\n                    // the text input is in a safe position that doesn't\n                    // require it to be scrolled into view, just set focus now\n                    inputEl.focus();\n                    return [2 /*return*/];\n                }\n                // temporarily move the focus to the focus holder so the browser\n                // doesn't freak out while it's trying to get the input in place\n                // at this point the native text input still does not have focus\n                relocateInput(componentEl, inputEl, true, scrollData.inputSafeY);\n                inputEl.focus();\n                if (!(typeof window !== 'undefined')) return [3 /*break*/, 3];\n                scrollContent_1 = function () { return __awaiter(void 0, void 0, void 0, function () {\n                    return __generator(this, function (_a) {\n                        switch (_a.label) {\n                            case 0:\n                                // clean up listeners and timeouts\n                                if (scrollContentTimeout_1 !== undefined) {\n                                    clearTimeout(scrollContentTimeout_1);\n                                }\n                                window.removeEventListener('ionKeyboardDidShow', scrollContent_1);\n                                if (!contentEl) return [3 /*break*/, 2];\n                                return [4 /*yield*/, contentEl.scrollByPoint(0, scrollData.scrollAmount, scrollData.scrollDuration)];\n                            case 1:\n                                _a.sent();\n                                _a.label = 2;\n                            case 2:\n                                // the scroll view is in the correct position now\n                                // give the native text input focus\n                                relocateInput(componentEl, inputEl, false, scrollData.inputSafeY);\n                                // ensure this is the focused input\n                                inputEl.focus();\n                                return [2 /*return*/];\n                        }\n                    });\n                }); };\n                if (!contentEl) return [3 /*break*/, 2];\n                return [4 /*yield*/, contentEl.getScrollElement()];\n            case 1:\n                scrollEl = _a.sent();\n                totalScrollAmount = scrollEl.scrollHeight - scrollEl.clientHeight;\n                if (scrollData.scrollAmount > (totalScrollAmount - scrollEl.scrollTop)) {\n                    window.addEventListener('ionKeyboardDidShow', scrollContent_1);\n                    /**\n                     * This should only fire in 2 instances:\n                     * 1. The app is very slow.\n                     * 2. The app is running in a browser on an old OS\n                     * that does not support Ionic Keyboard Events\n                     */\n                    scrollContentTimeout_1 = setTimeout(scrollContent_1, 1000);\n                    return [2 /*return*/];\n                }\n                _a.label = 2;\n            case 2:\n                scrollContent_1();\n                _a.label = 3;\n            case 3: return [2 /*return*/];\n        }\n    });\n}); };\nvar hasPointerMoved = function (threshold, startCoord, endCoord) {\n    if (startCoord && endCoord) {\n        var deltaX = (startCoord.x - endCoord.x);\n        var deltaY = (startCoord.y - endCoord.y);\n        var distance = deltaX * deltaX + deltaY * deltaY;\n        return distance > (threshold * threshold);\n    }\n    return false;\n};\nvar PADDING_TIMER_KEY = '$ionPaddingTimer';\nvar enableScrollPadding = function (keyboardHeight) {\n    var doc = document;\n    var onFocusin = function (ev) {\n        setScrollPadding(ev.target, keyboardHeight);\n    };\n    var onFocusout = function (ev) {\n        setScrollPadding(ev.target, 0);\n    };\n    doc.addEventListener('focusin', onFocusin);\n    doc.addEventListener('focusout', onFocusout);\n    return function () {\n        doc.removeEventListener('focusin', onFocusin);\n        doc.removeEventListener('focusout', onFocusout);\n    };\n};\nvar setScrollPadding = function (input, keyboardHeight) {\n    if (input.tagName !== 'INPUT') {\n        return;\n    }\n    if (input.parentElement && input.parentElement.tagName === 'ION-INPUT') {\n        return;\n    }\n    if (input.parentElement &&\n        input.parentElement.parentElement &&\n        input.parentElement.parentElement.tagName === 'ION-SEARCHBAR') {\n        return;\n    }\n    var el = input.closest('ion-content');\n    if (el === null) {\n        return;\n    }\n    var timer = el[PADDING_TIMER_KEY];\n    if (timer) {\n        clearTimeout(timer);\n    }\n    if (keyboardHeight > 0) {\n        el.style.setProperty('--keyboard-offset', keyboardHeight + \"px\");\n    }\n    else {\n        el[PADDING_TIMER_KEY] = setTimeout(function () {\n            el.style.setProperty('--keyboard-offset', '0px');\n        }, 120);\n    }\n};\nvar INPUT_BLURRING = true;\nvar SCROLL_PADDING = true;\nvar startInputShims = function (config) {\n    var doc = document;\n    var keyboardHeight = config.getNumber('keyboardHeight', 290);\n    var scrollAssist = config.getBoolean('scrollAssist', true);\n    var hideCaret = config.getBoolean('hideCaretOnScroll', true);\n    var inputBlurring = config.getBoolean('inputBlurring', true);\n    var scrollPadding = config.getBoolean('scrollPadding', true);\n    var inputs = Array.from(doc.querySelectorAll('ion-input, ion-textarea'));\n    var hideCaretMap = new WeakMap();\n    var scrollAssistMap = new WeakMap();\n    var registerInput = function (componentEl) { return __awaiter(void 0, void 0, void 0, function () {\n        var inputRoot, inputEl, scrollEl, footerEl, rmFn, rmFn;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (!componentEl.componentOnReady) return [3 /*break*/, 2];\n                    return [4 /*yield*/, componentEl.componentOnReady()];\n                case 1:\n                    _a.sent();\n                    _a.label = 2;\n                case 2:\n                    inputRoot = componentEl.shadowRoot || componentEl;\n                    inputEl = inputRoot.querySelector('input') || inputRoot.querySelector('textarea');\n                    scrollEl = componentEl.closest('ion-content');\n                    footerEl = (!scrollEl) ? componentEl.closest('ion-footer') : null;\n                    if (!inputEl) {\n                        return [2 /*return*/];\n                    }\n                    if (!!scrollEl && hideCaret && !hideCaretMap.has(componentEl)) {\n                        rmFn = enableHideCaretOnScroll(componentEl, inputEl, scrollEl);\n                        hideCaretMap.set(componentEl, rmFn);\n                    }\n                    if ((!!scrollEl || !!footerEl) && scrollAssist && !scrollAssistMap.has(componentEl)) {\n                        rmFn = enableScrollAssist(componentEl, inputEl, scrollEl, footerEl, keyboardHeight);\n                        scrollAssistMap.set(componentEl, rmFn);\n                    }\n                    return [2 /*return*/];\n            }\n        });\n    }); };\n    var unregisterInput = function (componentEl) {\n        if (hideCaret) {\n            var fn = hideCaretMap.get(componentEl);\n            if (fn) {\n                fn();\n            }\n            hideCaretMap.delete(componentEl);\n        }\n        if (scrollAssist) {\n            var fn = scrollAssistMap.get(componentEl);\n            if (fn) {\n                fn();\n            }\n            scrollAssistMap.delete(componentEl);\n        }\n    };\n    if (inputBlurring && INPUT_BLURRING) {\n        enableInputBlurring();\n    }\n    if (scrollPadding && SCROLL_PADDING) {\n        enableScrollPadding(keyboardHeight);\n    }\n    // Input might be already loaded in the DOM before ion-device-hacks did.\n    // At this point we need to look for all of the inputs not registered yet\n    // and register them.\n    for (var _i = 0, inputs_1 = inputs; _i < inputs_1.length; _i++) {\n        var input = inputs_1[_i];\n        registerInput(input);\n    }\n    doc.addEventListener('ionInputDidLoad', (function (ev) {\n        registerInput(ev.detail);\n    }));\n    doc.addEventListener('ionInputDidUnload', (function (ev) {\n        unregisterInput(ev.detail);\n    }));\n};\nexport { startInputShims };\n"],"sourceRoot":""}