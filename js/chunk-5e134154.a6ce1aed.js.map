{"version":3,"sources":["webpack:///./node_modules/@ionic/core/dist/esm-es5/framework-delegate-d1eb6504.js","webpack:///./node_modules/@ionic/core/dist/esm-es5/ion-nav_2.entry.js"],"names":["attachComponent","delegate","container","component","cssClasses","componentProps","el","this","_a","label","attachViewToDom","HTMLElement","Error","ownerDocument","createElement","forEach","c","classList","add","Object","assign","appendChild","componentOnReady","sent","detachComponent","element","parentElement","removeViewFromDom","remove","Promise","resolve","VIEW_STATE_NEW","VIEW_STATE_ATTACHED","VIEW_STATE_DESTROYED","ViewController","params","state","prototype","init","_b","_destroy","nav","undefined","matches","view","id","currentParams","keysA","keys","keysB","length","_i","keysA_1","key","convertToView","page","convertToViews","pages","map","filter","v","navCss","Nav","class_1","hostRef","transInstr","animationEnabled","useRouter","isTransitioning","destroyed","views","animated","ionNavWillLoad","ionNavWillChange","ionNavDidChange","swipeGestureChanged","gesture","enable","swipeGesture","rootChanged","root","setRoot","rootParams","componentWillLoad","document","querySelector","closest","mode","getBoolean","emit","componentDidLoad","createSwipeBackGesture","canStart","bind","onStart","onMove","onEnd","componentDidUnload","destroy","push","opts","done","queueTrns","insertStart","insertViews","insert","insertIndex","insertPages","insertComponents","pop","removeStart","removeCount","popTo","indexOrViewCtrl","tiConfig","removeView","popToRoot","removeIndex","startIndex","setPages","setRouteId","direction","_this","active","getActiveSync","changed","finish","promise","r","commonOpts","updateURL","viewIsReady","enteringEl","mark","p","markVisible","viewController","find","getRouteId","tagName","getActive","getByIndex","index","canGoBack","canGoBackSync","getPrevious","getPreviousSync","getLength","indexOf","ti","skipIfBusy","reject","nextTrns","success","result","fireError","hasCompleted","requiresTransition","enteringView","leavingView","router","navChanged","failed","rejectReason","shift","runTransition","rejectReason_1","trys","prepareTI","getEnteringView","postViewInit","enteringRequiresTransition","leavingRequiresTransition","transition","viewsLength","viewControllers","viewControllers_1","removeEnd","i","destroyQueue","finalBalance","console","warn","insertViews_1","insertViewAt","destroyQueue_1","destroyQueue_2","destroyView","progressCallback","leavingEl","animationOpts","progressAnimation","ani","sbAni","showGoBack","baseEl","animationBuilder","animation","get","transitionFinish","cleanupView","cleanup","existingIndex","splice","activeView","activeViewIndex","stepValue","progressStep","shouldComplete","dur","onFinish","oneTimeCallback","newStepValue","easing","progressEnd","render","defineProperty","enumerable","configurable","style","navLink","routerDirection","NavLink","onClick"],"mappings":"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","file":"js/chunk-5e134154.a6ce1aed.js","sourcesContent":["import { __awaiter, __generator } from \"tslib\";\nvar attachComponent = function (delegate, container, component, cssClasses, componentProps) { return __awaiter(void 0, void 0, void 0, function () {\n    var el;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (delegate) {\n                    return [2 /*return*/, delegate.attachViewToDom(container, component, componentProps, cssClasses)];\n                }\n                if (typeof component !== 'string' && !(component instanceof HTMLElement)) {\n                    throw new Error('framework delegate is missing');\n                }\n                el = (typeof component === 'string')\n                    ? container.ownerDocument && container.ownerDocument.createElement(component)\n                    : component;\n                if (cssClasses) {\n                    cssClasses.forEach(function (c) { return el.classList.add(c); });\n                }\n                if (componentProps) {\n                    Object.assign(el, componentProps);\n                }\n                container.appendChild(el);\n                if (!el.componentOnReady) return [3 /*break*/, 2];\n                return [4 /*yield*/, el.componentOnReady()];\n            case 1:\n                _a.sent();\n                _a.label = 2;\n            case 2: return [2 /*return*/, el];\n        }\n    });\n}); };\nvar detachComponent = function (delegate, element) {\n    if (element) {\n        if (delegate) {\n            var container = element.parentElement;\n            return delegate.removeViewFromDom(container, element);\n        }\n        element.remove();\n    }\n    return Promise.resolve();\n};\nexport { attachComponent as a, detachComponent as d };\n","import { __awaiter, __generator } from \"tslib\";\nimport { r as registerInstance, d as createEvent, h, e as getElement, H as Host } from './index-e23c3ffd.js';\nimport { b as getIonMode, c as config } from './ionic-global-fbc9a2ac.js';\nimport { b as assert } from './helpers-5c745fbd.js';\nimport { l as lifecycle, t as transition, s as setPageHidden, d as LIFECYCLE_WILL_UNLOAD, b as LIFECYCLE_WILL_LEAVE, c as LIFECYCLE_DID_LEAVE } from './index-b60886e1.js';\nimport { g as getTimeGivenProgression } from './cubic-bezier-685f606a.js';\nimport { a as attachComponent } from './framework-delegate-d1eb6504.js';\nvar VIEW_STATE_NEW = 1;\nvar VIEW_STATE_ATTACHED = 2;\nvar VIEW_STATE_DESTROYED = 3;\nvar ViewController = /** @class */ (function () {\n    function ViewController(component, params) {\n        this.component = component;\n        this.params = params;\n        this.state = VIEW_STATE_NEW;\n    }\n    ViewController.prototype.init = function (container) {\n        return __awaiter(this, void 0, void 0, function () {\n            var component, _a;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        this.state = VIEW_STATE_ATTACHED;\n                        if (!!this.element) return [3 /*break*/, 2];\n                        component = this.component;\n                        _a = this;\n                        return [4 /*yield*/, attachComponent(this.delegate, container, component, ['ion-page', 'ion-page-invisible'], this.params)];\n                    case 1:\n                        _a.element = _b.sent();\n                        _b.label = 2;\n                    case 2: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * DOM WRITE\n     */\n    ViewController.prototype._destroy = function () {\n        assert(this.state !== VIEW_STATE_DESTROYED, 'view state must be ATTACHED');\n        var element = this.element;\n        if (element) {\n            if (this.delegate) {\n                this.delegate.removeViewFromDom(element.parentElement, element);\n            }\n            else {\n                element.remove();\n            }\n        }\n        this.nav = undefined;\n        this.state = VIEW_STATE_DESTROYED;\n    };\n    return ViewController;\n}());\nvar matches = function (view, id, params) {\n    if (!view) {\n        return false;\n    }\n    if (view.component !== id) {\n        return false;\n    }\n    var currentParams = view.params;\n    if (currentParams === params) {\n        return true;\n    }\n    if (!currentParams && !params) {\n        return true;\n    }\n    if (!currentParams || !params) {\n        return false;\n    }\n    var keysA = Object.keys(currentParams);\n    var keysB = Object.keys(params);\n    if (keysA.length !== keysB.length) {\n        return false;\n    }\n    // Test for A's keys different from B.\n    for (var _i = 0, keysA_1 = keysA; _i < keysA_1.length; _i++) {\n        var key = keysA_1[_i];\n        if (currentParams[key] !== params[key]) {\n            return false;\n        }\n    }\n    return true;\n};\nvar convertToView = function (page, params) {\n    if (!page) {\n        return null;\n    }\n    if (page instanceof ViewController) {\n        return page;\n    }\n    return new ViewController(page, params);\n};\nvar convertToViews = function (pages) {\n    return pages.map(function (page) {\n        if (page instanceof ViewController) {\n            return page;\n        }\n        if ('page' in page) {\n            return convertToView(page.page, page.params);\n        }\n        return convertToView(page, undefined);\n    }).filter(function (v) { return v !== null; });\n};\nvar navCss = \":host{left:0;right:0;top:0;bottom:0;position:absolute;contain:layout size style;overflow:hidden;z-index:0}\";\nvar Nav = /** @class */ (function () {\n    function class_1(hostRef) {\n        registerInstance(this, hostRef);\n        this.transInstr = [];\n        this.animationEnabled = true;\n        this.useRouter = false;\n        this.isTransitioning = false;\n        this.destroyed = false;\n        this.views = [];\n        /**\n         * If `true`, the nav should animate the transition of components.\n         */\n        this.animated = true;\n        this.ionNavWillLoad = createEvent(this, \"ionNavWillLoad\", 7);\n        this.ionNavWillChange = createEvent(this, \"ionNavWillChange\", 3);\n        this.ionNavDidChange = createEvent(this, \"ionNavDidChange\", 3);\n    }\n    class_1.prototype.swipeGestureChanged = function () {\n        if (this.gesture) {\n            this.gesture.enable(this.swipeGesture === true);\n        }\n    };\n    class_1.prototype.rootChanged = function () {\n        if (this.root !== undefined) {\n            if (!this.useRouter) {\n                this.setRoot(this.root, this.rootParams);\n            }\n        }\n    };\n    class_1.prototype.componentWillLoad = function () {\n        this.useRouter =\n            !!document.querySelector('ion-router') &&\n                !this.el.closest('[no-router]');\n        if (this.swipeGesture === undefined) {\n            var mode = getIonMode(this);\n            this.swipeGesture = config.getBoolean('swipeBackEnabled', mode === 'ios');\n        }\n        this.ionNavWillLoad.emit();\n    };\n    class_1.prototype.componentDidLoad = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var _a;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        this.rootChanged();\n                        _a = this;\n                        return [4 /*yield*/, import('./swipe-back-7b4b8b66.js')];\n                    case 1:\n                        _a.gesture = (_b.sent()).createSwipeBackGesture(this.el, this.canStart.bind(this), this.onStart.bind(this), this.onMove.bind(this), this.onEnd.bind(this));\n                        this.swipeGestureChanged();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    class_1.prototype.componentDidUnload = function () {\n        for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n            var view = _a[_i];\n            lifecycle(view.element, LIFECYCLE_WILL_UNLOAD);\n            view._destroy();\n        }\n        if (this.gesture) {\n            this.gesture.destroy();\n            this.gesture = undefined;\n        }\n        // release swipe back gesture and transition\n        this.transInstr.length = this.views.length = 0;\n        this.destroyed = true;\n    };\n    /**\n     * Push a new component onto the current navigation stack. Pass any additional\n     * information along as an object. This additional information is accessible\n     * through NavParams.\n     *\n     * @param component The component to push onto the navigation stack.\n     * @param componentProps Any properties of the component.\n     * @param opts The navigation options.\n     * @param done The transition complete function.\n     */\n    class_1.prototype.push = function (component, componentProps, opts, done) {\n        return this.queueTrns({\n            insertStart: -1,\n            insertViews: [{ page: component, params: componentProps }],\n            opts: opts\n        }, done);\n    };\n    /**\n     * Inserts a component into the navigation stack at the specified index.\n     * This is useful to add a component at any point in the navigation stack.\n     *\n     * @param insertIndex The index to insert the component at in the stack.\n     * @param component The component to insert into the navigation stack.\n     * @param componentProps Any properties of the component.\n     * @param opts The navigation options.\n     * @param done The transition complete function.\n     */\n    class_1.prototype.insert = function (insertIndex, component, componentProps, opts, done) {\n        return this.queueTrns({\n            insertStart: insertIndex,\n            insertViews: [{ page: component, params: componentProps }],\n            opts: opts\n        }, done);\n    };\n    /**\n     * Inserts an array of components into the navigation stack at the specified index.\n     * The last component in the array will become instantiated as a view, and animate\n     * in to become the active view.\n     *\n     * @param insertIndex The index to insert the components at in the stack.\n     * @param insertComponents The components to insert into the navigation stack.\n     * @param opts The navigation options.\n     * @param done The transition complete function.\n     */\n    class_1.prototype.insertPages = function (insertIndex, insertComponents, opts, done) {\n        return this.queueTrns({\n            insertStart: insertIndex,\n            insertViews: insertComponents,\n            opts: opts\n        }, done);\n    };\n    /**\n     * Pop a component off of the navigation stack. Navigates back from the current\n     * component.\n     *\n     * @param opts The navigation options.\n     * @param done The transition complete function.\n     */\n    class_1.prototype.pop = function (opts, done) {\n        return this.queueTrns({\n            removeStart: -1,\n            removeCount: 1,\n            opts: opts\n        }, done);\n    };\n    /**\n     * Pop to a specific index in the navigation stack.\n     *\n     * @param indexOrViewCtrl The index or view controller to pop to.\n     * @param opts The navigation options.\n     * @param done The transition complete function.\n     */\n    class_1.prototype.popTo = function (indexOrViewCtrl, opts, done) {\n        var tiConfig = {\n            removeStart: -1,\n            removeCount: -1,\n            opts: opts\n        };\n        if (typeof indexOrViewCtrl === 'object' && indexOrViewCtrl.component) {\n            tiConfig.removeView = indexOrViewCtrl;\n            tiConfig.removeStart = 1;\n        }\n        else if (typeof indexOrViewCtrl === 'number') {\n            tiConfig.removeStart = indexOrViewCtrl + 1;\n        }\n        return this.queueTrns(tiConfig, done);\n    };\n    /**\n     * Navigate back to the root of the stack, no matter how far back that is.\n     *\n     * @param opts The navigation options.\n     * @param done The transition complete function.\n     */\n    class_1.prototype.popToRoot = function (opts, done) {\n        return this.queueTrns({\n            removeStart: 1,\n            removeCount: -1,\n            opts: opts\n        }, done);\n    };\n    /**\n     * Removes a component from the navigation stack at the specified index.\n     *\n     * @param startIndex The number to begin removal at.\n     * @param removeCount The number of components to remove.\n     * @param opts The navigation options.\n     * @param done The transition complete function.\n     */\n    class_1.prototype.removeIndex = function (startIndex, removeCount, opts, done) {\n        if (removeCount === void 0) { removeCount = 1; }\n        return this.queueTrns({\n            removeStart: startIndex,\n            removeCount: removeCount,\n            opts: opts\n        }, done);\n    };\n    /**\n     * Set the root for the current navigation stack to a component.\n     *\n     * @param component The component to set as the root of the navigation stack.\n     * @param componentProps Any properties of the component.\n     * @param opts The navigation options.\n     * @param done The transition complete function.\n     */\n    class_1.prototype.setRoot = function (component, componentProps, opts, done) {\n        return this.setPages([{ page: component, params: componentProps }], opts, done);\n    };\n    /**\n     * Set the views of the current navigation stack and navigate to the last view.\n     * By default animations are disabled, but they can be enabled by passing options\n     * to the navigation controller. Navigation parameters can also be passed to the\n     * individual pages in the array.\n     *\n     * @param views The list of views to set as the navigation stack.\n     * @param opts The navigation options.\n     * @param done The transition complete function.\n     */\n    class_1.prototype.setPages = function (views, opts, done) {\n        if (opts == null) {\n            opts = {};\n        }\n        // if animation wasn't set to true then default it to NOT animate\n        if (opts.animated !== true) {\n            opts.animated = false;\n        }\n        return this.queueTrns({\n            insertStart: 0,\n            insertViews: views,\n            removeStart: 0,\n            removeCount: -1,\n            opts: opts\n        }, done);\n    };\n    /** @internal */\n    class_1.prototype.setRouteId = function (id, params, direction) {\n        var _this = this;\n        var active = this.getActiveSync();\n        if (matches(active, id, params)) {\n            return Promise.resolve({\n                changed: false,\n                element: active.element\n            });\n        }\n        var resolve;\n        var promise = new Promise(function (r) { return (resolve = r); });\n        var finish;\n        var commonOpts = {\n            updateURL: false,\n            viewIsReady: function (enteringEl) {\n                var mark;\n                var p = new Promise(function (r) { return (mark = r); });\n                resolve({\n                    changed: true,\n                    element: enteringEl,\n                    markVisible: function () { return __awaiter(_this, void 0, void 0, function () {\n                        return __generator(this, function (_a) {\n                            switch (_a.label) {\n                                case 0:\n                                    mark();\n                                    return [4 /*yield*/, finish];\n                                case 1:\n                                    _a.sent();\n                                    return [2 /*return*/];\n                            }\n                        });\n                    }); }\n                });\n                return p;\n            }\n        };\n        if (direction === 'root') {\n            finish = this.setRoot(id, params, commonOpts);\n        }\n        else {\n            var viewController = this.views.find(function (v) { return matches(v, id, params); });\n            if (viewController) {\n                finish = this.popTo(viewController, Object.assign(Object.assign({}, commonOpts), { direction: 'back' }));\n            }\n            else if (direction === 'forward') {\n                finish = this.push(id, params, commonOpts);\n            }\n            else if (direction === 'back') {\n                finish = this.setRoot(id, params, Object.assign(Object.assign({}, commonOpts), { direction: 'back', animated: true }));\n            }\n        }\n        return promise;\n    };\n    /** @internal */\n    class_1.prototype.getRouteId = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var active;\n            return __generator(this, function (_a) {\n                active = this.getActiveSync();\n                return [2 /*return*/, active\n                        ? {\n                            id: active.element.tagName,\n                            params: active.params,\n                            element: active.element\n                        }\n                        : undefined];\n            });\n        });\n    };\n    /**\n     * Get the active view.\n     */\n    class_1.prototype.getActive = function () {\n        return Promise.resolve(this.getActiveSync());\n    };\n    /**\n     * Get the view at the specified index.\n     *\n     * @param index The index of the view.\n     */\n    class_1.prototype.getByIndex = function (index) {\n        return Promise.resolve(this.views[index]);\n    };\n    /**\n     * Returns `true` if the current view can go back.\n     *\n     * @param view The view to check.\n     */\n    class_1.prototype.canGoBack = function (view) {\n        return Promise.resolve(this.canGoBackSync(view));\n    };\n    /**\n     * Get the previous view.\n     *\n     * @param view The view to get.\n     */\n    class_1.prototype.getPrevious = function (view) {\n        return Promise.resolve(this.getPreviousSync(view));\n    };\n    class_1.prototype.getLength = function () {\n        return this.views.length;\n    };\n    class_1.prototype.getActiveSync = function () {\n        return this.views[this.views.length - 1];\n    };\n    class_1.prototype.canGoBackSync = function (view) {\n        if (view === void 0) { view = this.getActiveSync(); }\n        return !!(view && this.getPreviousSync(view));\n    };\n    class_1.prototype.getPreviousSync = function (view) {\n        if (view === void 0) { view = this.getActiveSync(); }\n        if (!view) {\n            return undefined;\n        }\n        var views = this.views;\n        var index = views.indexOf(view);\n        return index > 0 ? views[index - 1] : undefined;\n    };\n    // _queueTrns() adds a navigation stack change to the queue and schedules it to run:\n    // 1. _nextTrns(): consumes the next transition in the queue\n    // 2. _viewInit(): initializes enteringView if required\n    // 3. _viewTest(): ensures canLeave/canEnter Returns `true`, so the operation can continue\n    // 4. _postViewInit(): add/remove the views from the navigation stack\n    // 5. _transitionInit(): initializes the visual transition if required and schedules it to run\n    // 6. _viewAttachToDOM(): attaches the enteringView to the DOM\n    // 7. _transitionStart(): called once the transition actually starts, it initializes the Animation underneath.\n    // 8. _transitionFinish(): called once the transition finishes\n    // 9. _cleanup(): syncs the navigation internal state with the DOM. For example it removes the pages from the DOM or hides/show them.\n    class_1.prototype.queueTrns = function (ti, done) {\n        if (this.isTransitioning && ti.opts != null && ti.opts.skipIfBusy) {\n            return Promise.resolve(false);\n        }\n        var promise = new Promise(function (resolve, reject) {\n            ti.resolve = resolve;\n            ti.reject = reject;\n        });\n        ti.done = done;\n        // Normalize empty\n        if (ti.insertViews && ti.insertViews.length === 0) {\n            ti.insertViews = undefined;\n        }\n        // Enqueue transition instruction\n        this.transInstr.push(ti);\n        // if there isn't a transition already happening\n        // then this will kick off this transition\n        this.nextTrns();\n        return promise;\n    };\n    class_1.prototype.success = function (result, ti) {\n        if (this.destroyed) {\n            this.fireError('nav controller was destroyed', ti);\n            return;\n        }\n        if (ti.done) {\n            ti.done(result.hasCompleted, result.requiresTransition, result.enteringView, result.leavingView, result.direction);\n        }\n        ti.resolve(result.hasCompleted);\n        if (ti.opts.updateURL !== false && this.useRouter) {\n            var router = document.querySelector('ion-router');\n            if (router) {\n                var direction = result.direction === 'back' ? 'back' : 'forward';\n                router.navChanged(direction);\n            }\n        }\n    };\n    class_1.prototype.failed = function (rejectReason, ti) {\n        if (this.destroyed) {\n            this.fireError('nav controller was destroyed', ti);\n            return;\n        }\n        this.transInstr.length = 0;\n        this.fireError(rejectReason, ti);\n    };\n    class_1.prototype.fireError = function (rejectReason, ti) {\n        if (ti.done) {\n            ti.done(false, false, rejectReason);\n        }\n        if (ti.reject && !this.destroyed) {\n            ti.reject(rejectReason);\n        }\n        else {\n            ti.resolve(false);\n        }\n    };\n    class_1.prototype.nextTrns = function () {\n        // this is the framework's bread 'n butta function\n        // only one transition is allowed at any given time\n        if (this.isTransitioning) {\n            return false;\n        }\n        // there is no transition happening right now\n        // get the next instruction\n        var ti = this.transInstr.shift();\n        if (!ti) {\n            return false;\n        }\n        this.runTransition(ti);\n        return true;\n    };\n    class_1.prototype.runTransition = function (ti) {\n        return __awaiter(this, void 0, void 0, function () {\n            var leavingView, enteringView, requiresTransition, result, _a, rejectReason_1;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        _b.trys.push([0, 6, , 7]);\n                        // set that this nav is actively transitioning\n                        this.ionNavWillChange.emit();\n                        this.isTransitioning = true;\n                        this.prepareTI(ti);\n                        leavingView = this.getActiveSync();\n                        enteringView = this.getEnteringView(ti, leavingView);\n                        if (!leavingView && !enteringView) {\n                            throw new Error('no views in the stack to be removed');\n                        }\n                        if (!(enteringView && enteringView.state === VIEW_STATE_NEW)) return [3 /*break*/, 2];\n                        return [4 /*yield*/, enteringView.init(this.el)];\n                    case 1:\n                        _b.sent();\n                        _b.label = 2;\n                    case 2:\n                        this.postViewInit(enteringView, leavingView, ti);\n                        requiresTransition = (ti.enteringRequiresTransition || ti.leavingRequiresTransition) &&\n                            enteringView !== leavingView;\n                        if (!requiresTransition) return [3 /*break*/, 4];\n                        return [4 /*yield*/, this.transition(enteringView, leavingView, ti)];\n                    case 3:\n                        _a = _b.sent();\n                        return [3 /*break*/, 5];\n                    case 4:\n                        _a = {\n                            // transition is not required, so we are already done!\n                            // they're inserting/removing the views somewhere in the middle or\n                            // beginning, so visually nothing needs to animate/transition\n                            // resolve immediately because there's no animation that's happening\n                            hasCompleted: true,\n                            requiresTransition: false\n                        };\n                        _b.label = 5;\n                    case 5:\n                        result = _a;\n                        this.success(result, ti);\n                        this.ionNavDidChange.emit();\n                        return [3 /*break*/, 7];\n                    case 6:\n                        rejectReason_1 = _b.sent();\n                        this.failed(rejectReason_1, ti);\n                        return [3 /*break*/, 7];\n                    case 7:\n                        this.isTransitioning = false;\n                        this.nextTrns();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    class_1.prototype.prepareTI = function (ti) {\n        var viewsLength = this.views.length;\n        ti.opts = ti.opts || {};\n        if (ti.opts.delegate === undefined) {\n            ti.opts.delegate = this.delegate;\n        }\n        if (ti.removeView !== undefined) {\n            assert(ti.removeStart !== undefined, 'removeView needs removeStart');\n            assert(ti.removeCount !== undefined, 'removeView needs removeCount');\n            var index = this.views.indexOf(ti.removeView);\n            if (index < 0) {\n                throw new Error('removeView was not found');\n            }\n            ti.removeStart += index;\n        }\n        if (ti.removeStart !== undefined) {\n            if (ti.removeStart < 0) {\n                ti.removeStart = viewsLength - 1;\n            }\n            if (ti.removeCount < 0) {\n                ti.removeCount = viewsLength - ti.removeStart;\n            }\n            ti.leavingRequiresTransition =\n                ti.removeCount > 0 && ti.removeStart + ti.removeCount === viewsLength;\n        }\n        if (ti.insertViews) {\n            // allow -1 to be passed in to auto push it on the end\n            // and clean up the index if it's larger then the size of the stack\n            if (ti.insertStart < 0 || ti.insertStart > viewsLength) {\n                ti.insertStart = viewsLength;\n            }\n            ti.enteringRequiresTransition = ti.insertStart === viewsLength;\n        }\n        var insertViews = ti.insertViews;\n        if (!insertViews) {\n            return;\n        }\n        assert(insertViews.length > 0, 'length can not be zero');\n        var viewControllers = convertToViews(insertViews);\n        if (viewControllers.length === 0) {\n            throw new Error('invalid views to insert');\n        }\n        // Check all the inserted view are correct\n        for (var _i = 0, viewControllers_1 = viewControllers; _i < viewControllers_1.length; _i++) {\n            var view = viewControllers_1[_i];\n            view.delegate = ti.opts.delegate;\n            var nav = view.nav;\n            if (nav && nav !== this) {\n                throw new Error('inserted view was already inserted');\n            }\n            if (view.state === VIEW_STATE_DESTROYED) {\n                throw new Error('inserted view was already destroyed');\n            }\n        }\n        ti.insertViews = viewControllers;\n    };\n    class_1.prototype.getEnteringView = function (ti, leavingView) {\n        var insertViews = ti.insertViews;\n        if (insertViews !== undefined) {\n            // grab the very last view of the views to be inserted\n            // and initialize it as the new entering view\n            return insertViews[insertViews.length - 1];\n        }\n        var removeStart = ti.removeStart;\n        if (removeStart !== undefined) {\n            var views = this.views;\n            var removeEnd = removeStart + ti.removeCount;\n            for (var i = views.length - 1; i >= 0; i--) {\n                var view = views[i];\n                if ((i < removeStart || i >= removeEnd) && view !== leavingView) {\n                    return view;\n                }\n            }\n        }\n        return undefined;\n    };\n    class_1.prototype.postViewInit = function (enteringView, leavingView, ti) {\n        assert(leavingView || enteringView, 'Both leavingView and enteringView are null');\n        assert(ti.resolve, 'resolve must be valid');\n        assert(ti.reject, 'reject must be valid');\n        var opts = ti.opts;\n        var insertViews = ti.insertViews;\n        var removeStart = ti.removeStart;\n        var removeCount = ti.removeCount;\n        var destroyQueue;\n        // there are views to remove\n        if (removeStart !== undefined && removeCount !== undefined) {\n            assert(removeStart >= 0, 'removeStart can not be negative');\n            assert(removeCount >= 0, 'removeCount can not be negative');\n            destroyQueue = [];\n            for (var i = 0; i < removeCount; i++) {\n                var view = this.views[i + removeStart];\n                if (view && view !== enteringView && view !== leavingView) {\n                    destroyQueue.push(view);\n                }\n            }\n            // default the direction to \"back\"\n            opts.direction = opts.direction || 'back';\n        }\n        var finalBalance = this.views.length +\n            (insertViews !== undefined ? insertViews.length : 0) -\n            (removeCount !== undefined ? removeCount : 0);\n        assert(finalBalance >= 0, 'final balance can not be negative');\n        if (finalBalance === 0) {\n            console.warn(\"You can't remove all the pages in the navigation stack. nav.pop() is probably called too many times.\", this, this.el);\n            throw new Error('navigation stack needs at least one root page');\n        }\n        // At this point the transition can not be rejected, any throw should be an error\n        // there are views to insert\n        if (insertViews) {\n            // add the views to the\n            var insertIndex = ti.insertStart;\n            for (var _i = 0, insertViews_1 = insertViews; _i < insertViews_1.length; _i++) {\n                var view = insertViews_1[_i];\n                this.insertViewAt(view, insertIndex);\n                insertIndex++;\n            }\n            if (ti.enteringRequiresTransition) {\n                // default to forward if not already set\n                opts.direction = opts.direction || 'forward';\n            }\n        }\n        // if the views to be removed are in the beginning or middle\n        // and there is not a view that needs to visually transition out\n        // then just destroy them and don't transition anything\n        // batch all of lifecycles together\n        // let's make sure, callbacks are zoned\n        if (destroyQueue && destroyQueue.length > 0) {\n            for (var _a = 0, destroyQueue_1 = destroyQueue; _a < destroyQueue_1.length; _a++) {\n                var view = destroyQueue_1[_a];\n                lifecycle(view.element, LIFECYCLE_WILL_LEAVE);\n                lifecycle(view.element, LIFECYCLE_DID_LEAVE);\n                lifecycle(view.element, LIFECYCLE_WILL_UNLOAD);\n            }\n            // once all lifecycle events has been delivered, we can safely detroy the views\n            for (var _b = 0, destroyQueue_2 = destroyQueue; _b < destroyQueue_2.length; _b++) {\n                var view = destroyQueue_2[_b];\n                this.destroyView(view);\n            }\n        }\n    };\n    class_1.prototype.transition = function (enteringView, leavingView, ti) {\n        return __awaiter(this, void 0, void 0, function () {\n            var opts, progressCallback, mode, enteringEl, leavingEl, animationOpts, hasCompleted;\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        opts = ti.opts;\n                        progressCallback = opts.progressAnimation\n                            ? function (ani) { return _this.sbAni = ani; }\n                            : undefined;\n                        mode = getIonMode(this);\n                        enteringEl = enteringView.element;\n                        leavingEl = leavingView && leavingView.element;\n                        animationOpts = Object.assign({ mode: mode, showGoBack: this.canGoBackSync(enteringView), baseEl: this.el, animationBuilder: this.animation || opts.animationBuilder || config.get('navAnimation'), progressCallback: progressCallback, animated: this.animated && config.getBoolean('animated', true), enteringEl: enteringEl,\n                            leavingEl: leavingEl }, opts);\n                        return [4 /*yield*/, transition(animationOpts)];\n                    case 1:\n                        hasCompleted = (_a.sent()).hasCompleted;\n                        return [2 /*return*/, this.transitionFinish(hasCompleted, enteringView, leavingView, opts)];\n                }\n            });\n        });\n    };\n    class_1.prototype.transitionFinish = function (hasCompleted, enteringView, leavingView, opts) {\n        var cleanupView = hasCompleted ? enteringView : leavingView;\n        if (cleanupView) {\n            this.cleanup(cleanupView);\n        }\n        return {\n            hasCompleted: hasCompleted,\n            requiresTransition: true,\n            enteringView: enteringView,\n            leavingView: leavingView,\n            direction: opts.direction\n        };\n    };\n    class_1.prototype.insertViewAt = function (view, index) {\n        var views = this.views;\n        var existingIndex = views.indexOf(view);\n        if (existingIndex > -1) {\n            // this view is already in the stack!!\n            // move it to its new location\n            assert(view.nav === this, 'view is not part of the nav');\n            views.splice(index, 0, views.splice(existingIndex, 1)[0]);\n        }\n        else {\n            assert(!view.nav, 'nav is used');\n            // this is a new view to add to the stack\n            // create the new entering view\n            view.nav = this;\n            // insert the entering view into the correct index in the stack\n            views.splice(index, 0, view);\n        }\n    };\n    class_1.prototype.removeView = function (view) {\n        assert(view.state === VIEW_STATE_ATTACHED || view.state === VIEW_STATE_DESTROYED, 'view state should be loaded or destroyed');\n        var views = this.views;\n        var index = views.indexOf(view);\n        assert(index > -1, 'view must be part of the stack');\n        if (index >= 0) {\n            views.splice(index, 1);\n        }\n    };\n    class_1.prototype.destroyView = function (view) {\n        view._destroy();\n        this.removeView(view);\n    };\n    /**\n     * DOM WRITE\n     */\n    class_1.prototype.cleanup = function (activeView) {\n        // ok, cleanup time!! Destroy all of the views that are\n        // INACTIVE and come after the active view\n        // only do this if the views exist, though\n        if (this.destroyed) {\n            return;\n        }\n        var views = this.views;\n        var activeViewIndex = views.indexOf(activeView);\n        for (var i = views.length - 1; i >= 0; i--) {\n            var view = views[i];\n            var element = view.element;\n            if (i > activeViewIndex) {\n                // this view comes after the active view\n                // let's unload it\n                lifecycle(element, LIFECYCLE_WILL_UNLOAD);\n                this.destroyView(view);\n            }\n            else if (i < activeViewIndex) {\n                // this view comes before the active view\n                // and it is not a portal then ensure it is hidden\n                setPageHidden(element, true);\n            }\n        }\n    };\n    class_1.prototype.canStart = function () {\n        return (!!this.swipeGesture &&\n            !this.isTransitioning &&\n            this.transInstr.length === 0 &&\n            this.animationEnabled &&\n            this.canGoBackSync());\n    };\n    class_1.prototype.onStart = function () {\n        this.queueTrns({\n            removeStart: -1,\n            removeCount: 1,\n            opts: {\n                direction: 'back',\n                progressAnimation: true\n            }\n        }, undefined);\n    };\n    class_1.prototype.onMove = function (stepValue) {\n        if (this.sbAni) {\n            this.sbAni.progressStep(stepValue);\n        }\n    };\n    class_1.prototype.onEnd = function (shouldComplete, stepValue, dur) {\n        var _this = this;\n        if (this.sbAni) {\n            this.animationEnabled = false;\n            this.sbAni.onFinish(function () {\n                _this.animationEnabled = true;\n            }, { oneTimeCallback: true });\n            // Account for rounding errors in JS\n            var newStepValue = (shouldComplete) ? -0.001 : 0.001;\n            /**\n             * Animation will be reversed here, so need to\n             * reverse the easing curve as well\n             *\n             * Additionally, we need to account for the time relative\n             * to the new easing curve, as `stepValue` is going to be given\n             * in terms of a linear curve.\n             */\n            if (!shouldComplete) {\n                this.sbAni.easing('cubic-bezier(1, 0, 0.68, 0.28)');\n                newStepValue += getTimeGivenProgression([0, 0], [1, 0], [0.68, 0.28], [1, 1], stepValue)[0];\n            }\n            else {\n                newStepValue += getTimeGivenProgression([0, 0], [0.32, 0.72], [0, 1], [1, 1], stepValue)[0];\n            }\n            this.sbAni.progressEnd(shouldComplete ? 1 : 0, newStepValue, dur);\n        }\n    };\n    class_1.prototype.render = function () {\n        return (h(\"slot\", null));\n    };\n    Object.defineProperty(class_1.prototype, \"el\", {\n        get: function () { return getElement(this); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(class_1, \"watchers\", {\n        get: function () {\n            return {\n                \"swipeGesture\": [\"swipeGestureChanged\"],\n                \"root\": [\"rootChanged\"]\n            };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return class_1;\n}());\nNav.style = navCss;\nvar navLink = function (el, routerDirection, component, componentProps) {\n    var nav = el.closest('ion-nav');\n    if (nav) {\n        if (routerDirection === 'forward') {\n            if (component !== undefined) {\n                return nav.push(component, componentProps, { skipIfBusy: true });\n            }\n        }\n        else if (routerDirection === 'root') {\n            if (component !== undefined) {\n                return nav.setRoot(component, componentProps, { skipIfBusy: true });\n            }\n        }\n        else if (routerDirection === 'back') {\n            return nav.pop({ skipIfBusy: true });\n        }\n    }\n    return Promise.resolve(false);\n};\nvar NavLink = /** @class */ (function () {\n    function NavLink(hostRef) {\n        var _this = this;\n        registerInstance(this, hostRef);\n        /**\n         * The transition direction when navigating to another page.\n         */\n        this.routerDirection = 'forward';\n        this.onClick = function () {\n            return navLink(_this.el, _this.routerDirection, _this.component, _this.componentProps);\n        };\n    }\n    NavLink.prototype.render = function () {\n        return (h(Host, { onClick: this.onClick }));\n    };\n    Object.defineProperty(NavLink.prototype, \"el\", {\n        get: function () { return getElement(this); },\n        enumerable: true,\n        configurable: true\n    });\n    return NavLink;\n}());\nexport { Nav as ion_nav, NavLink as ion_nav_link };\n"],"sourceRoot":""}