{"version":3,"sources":["webpack:///./node_modules/@ionic/core/dist/esm-es5/ion-text.entry.js","webpack:///./node_modules/@ionic/core/dist/esm-es5/theme-c2dc54d9.js"],"names":["textCss","Text","hostRef","this","prototype","render","_a","mode","class","Object","assign","color","style","hostContext","selector","el","closest","createColorClasses","length","undefined","getClassList","classes","array","Array","isArray","split","filter","c","map","trim","getClassMap","forEach","SCHEME","openURL","url","ev","direction","router","test","document","querySelector","preventDefault","push"],"mappings":"gHAAA,wFAGIA,EAAU,iDACVC,EAAsB,WACtB,SAASA,EAAKC,GACV,eAAiBC,KAAMD,GAO3B,OALAD,EAAKG,UAAUC,OAAS,WACpB,IAAIC,EACAC,EAAO,eAAWJ,MACtB,OAAQ,cAAD,CAAG,OAAM,CAAEK,MAAOC,OAAOC,OAAOD,OAAOC,OAAO,GAAI,eAAmBP,KAAKQ,SAAUL,EAAK,GAAIA,EAAGC,IAAQ,EAAMD,KAAQ,eAAE,OAAQ,QAEpIL,EATc,GAWzBA,EAAKW,MAAQZ,G,kCCfb,wJACIa,EAAc,SAAUC,EAAUC,GAClC,OAAgC,OAAzBA,EAAGC,QAAQF,IAKlBG,EAAqB,SAAUN,GAC/B,IAAIL,EACJ,MAAyB,kBAAVK,GAAsBA,EAAMO,OAAS,GAAMZ,EAAK,CACvD,aAAa,GAEjBA,EAAG,aAAeK,IAAS,EAC3BL,QAAMa,GAEVC,EAAe,SAAUC,GACzB,QAAgBF,IAAZE,EAAuB,CACvB,IAAIC,EAAQC,MAAMC,QAAQH,GAAWA,EAAUA,EAAQI,MAAM,KAC7D,OAAOH,EACFI,QAAO,SAAUC,GAAK,OAAY,MAALA,KAC7BC,KAAI,SAAUD,GAAK,OAAOA,EAAEE,UAC5BH,QAAO,SAAUC,GAAK,MAAa,KAANA,KAEtC,MAAO,IAEPG,EAAc,SAAUT,GACxB,IAAIO,EAAM,GAEV,OADAR,EAAaC,GAASU,SAAQ,SAAUJ,GAAK,OAAOC,EAAID,IAAK,KACtDC,GAEPI,EAAS,uBACTC,EAAU,SAAUC,EAAKC,EAAIC,GAAa,OAAO,4BAAU,OAAQ,OAAQ,GAAQ,WACnF,IAAIC,EACJ,OAAO,yBAAYlC,MAAM,SAAUG,GAC/B,OAAW,MAAP4B,GAA0B,MAAXA,EAAI,KAAeF,EAAOM,KAAKJ,KAC9CG,EAASE,SAASC,cAAc,cAC5BH,IACU,MAANF,GACAA,EAAGM,iBAEA,CAAC,EAAcJ,EAAOK,KAAKR,EAAKE,KAGxC,CAAC,GAAc","file":"js/chunk-30ddba14.cb16a6b5.js","sourcesContent":["import { r as registerInstance, h, H as Host } from './index-e23c3ffd.js';\nimport { b as getIonMode } from './ionic-global-fbc9a2ac.js';\nimport { c as createColorClasses } from './theme-c2dc54d9.js';\nvar textCss = \":host(.ion-color){color:var(--ion-color-base)}\";\nvar Text = /** @class */ (function () {\n    function Text(hostRef) {\n        registerInstance(this, hostRef);\n    }\n    Text.prototype.render = function () {\n        var _a;\n        var mode = getIonMode(this);\n        return (h(Host, { class: Object.assign(Object.assign({}, createColorClasses(this.color)), (_a = {}, _a[mode] = true, _a)) }, h(\"slot\", null)));\n    };\n    return Text;\n}());\nText.style = textCss;\nexport { Text as ion_text };\n","import { __awaiter, __generator } from \"tslib\";\nvar hostContext = function (selector, el) {\n    return el.closest(selector) !== null;\n};\n/**\n * Create the mode and color classes for the component based on the classes passed in\n */\nvar createColorClasses = function (color) {\n    var _a;\n    return (typeof color === 'string' && color.length > 0) ? (_a = {\n            'ion-color': true\n        },\n        _a[\"ion-color-\" + color] = true,\n        _a) : undefined;\n};\nvar getClassList = function (classes) {\n    if (classes !== undefined) {\n        var array = Array.isArray(classes) ? classes : classes.split(' ');\n        return array\n            .filter(function (c) { return c != null; })\n            .map(function (c) { return c.trim(); })\n            .filter(function (c) { return c !== ''; });\n    }\n    return [];\n};\nvar getClassMap = function (classes) {\n    var map = {};\n    getClassList(classes).forEach(function (c) { return map[c] = true; });\n    return map;\n};\nvar SCHEME = /^[a-z][a-z0-9+\\-.]*:/;\nvar openURL = function (url, ev, direction) { return __awaiter(void 0, void 0, void 0, function () {\n    var router;\n    return __generator(this, function (_a) {\n        if (url != null && url[0] !== '#' && !SCHEME.test(url)) {\n            router = document.querySelector('ion-router');\n            if (router) {\n                if (ev != null) {\n                    ev.preventDefault();\n                }\n                return [2 /*return*/, router.push(url, direction)];\n            }\n        }\n        return [2 /*return*/, false];\n    });\n}); };\nexport { createColorClasses as c, getClassMap as g, hostContext as h, openURL as o };\n"],"sourceRoot":""}